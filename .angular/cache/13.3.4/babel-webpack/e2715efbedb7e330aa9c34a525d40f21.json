{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { MessageService } from '../../messages/message.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../messages/message.service\";\nexport let CartService = /*#__PURE__*/(() => {\n  class CartService {\n    constructor(messageService) {\n      this.messageService = messageService;\n      this.itemsChanged = new EventEmitter();\n      this.cartItems = [];\n    }\n\n    getItems() {\n      return this.cartItems.slice();\n    } // Get Product ids out of CartItem[] in a new array\n\n\n    getItemIds() {\n      return this.getItems().map(cartItem => cartItem.product.id);\n    }\n\n    addItem(item) {\n      // If item is already in cart, add to the amount, otherwise push item into cart\n      if (this.getItemIds().includes(item.product.id)) {\n        this.cartItems.forEach(function (cartItem) {\n          if (cartItem.product.id === item.product.id) {\n            cartItem.amount += item.amount;\n          }\n        });\n        this.messageService.add('Amount in cart changed for: ' + item.product.name);\n      } else {\n        this.cartItems.push(item);\n        this.messageService.add('Added to cart: ' + item.product.name);\n      }\n\n      this.itemsChanged.emit(this.cartItems.slice());\n    }\n\n    addItems(items) {\n      items.forEach(cartItem => {\n        this.addItem(cartItem);\n      });\n    }\n\n    removeItem(item) {\n      const indexToRemove = this.cartItems.findIndex(element => element === item);\n      this.cartItems.splice(indexToRemove, 1);\n      this.itemsChanged.emit(this.cartItems.slice());\n      this.messageService.add('Deleted from cart: ' + item.product.name);\n    }\n\n    updateItemAmount(item, newAmount) {\n      this.cartItems.forEach(cartItem => {\n        if (cartItem.product.id === item.product.id) {\n          cartItem.amount = newAmount;\n        }\n      });\n      this.itemsChanged.emit(this.cartItems.slice());\n      this.messageService.add('Updated amount for: ' + item.product.name);\n    }\n\n    clearCart() {\n      this.cartItems = [];\n      this.itemsChanged.emit(this.cartItems.slice());\n      this.messageService.add('Cleared cart');\n    }\n\n    getTotal() {\n      let total = 0;\n      this.cartItems.forEach(cartItem => {\n        total += cartItem.amount * cartItem.product.price;\n      });\n      return total;\n    }\n\n  }\n\n  CartService.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)(i0.ɵɵinject(i1.MessageService));\n  };\n\n  CartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac\n  });\n  return CartService;\n})();","map":null,"metadata":{},"sourceType":"module"}