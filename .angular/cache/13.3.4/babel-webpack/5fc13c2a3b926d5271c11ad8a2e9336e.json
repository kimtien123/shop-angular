{"ast":null,"code":"import { AngularFireStorage } from 'angularfire2/storage';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"angularfire2/storage\";\nexport let FileUploadService = /*#__PURE__*/(() => {\n  class FileUploadService {\n    constructor(storage) {\n      this.storage = storage;\n    }\n\n    startUpload(data) {\n      // The File object\n      const file = data.files.item(0); // Client-side validation example\n\n      if (file.type.split('/')[0] !== 'image') {\n        console.error('unsupported file type :( ');\n        throw new Error('upload failed, unsupported file type');\n      } // The storage path\n\n\n      const path = `product-images/${new Date().getTime()}_${file}`; // The main task\n\n      this.task$ = this.storage.upload(path, file); // the percentage\n\n      this.percentage$ = this.task$.percentageChanges();\n      return this.task$;\n    }\n\n    deleteFile(files) {\n      if (files) {\n        return files.map(filePath => {\n          return this.storage.ref(filePath).delete();\n        });\n      }\n    } // Determines if the upload task is active\n\n\n    isActive(snapshot) {\n      return snapshot.state === 'running' && snapshot.bytesTransferred < snapshot.totalBytes;\n    }\n\n  }\n\n  FileUploadService.ɵfac = function FileUploadService_Factory(t) {\n    return new (t || FileUploadService)(i0.ɵɵinject(i1.AngularFireStorage));\n  };\n\n  FileUploadService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FileUploadService,\n    factory: FileUploadService.ɵfac\n  });\n  return FileUploadService;\n})();","map":null,"metadata":{},"sourceType":"module"}