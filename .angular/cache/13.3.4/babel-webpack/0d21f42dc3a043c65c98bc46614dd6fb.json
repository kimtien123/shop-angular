{"ast":null,"code":"import { of } from 'rxjs';\nimport { publishReplay, refCount, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let ProductsCacheService = /*#__PURE__*/(() => {\n  class ProductsCacheService {\n    get(key, fallback) {\n      if (typeof key === 'string') {\n        return this.getProducts(fallback);\n      } else {\n        return this.getProduct(key, fallback);\n      }\n    }\n\n    getProducts(fallback) {\n      if (!this.products) {\n        this.products = fallback.pipe(publishReplay(1), refCount());\n      }\n\n      return this.products;\n    }\n\n    getProduct(key, fallback) {\n      return this.getProducts(fallback).pipe(switchMap(products => {\n        const selectedProduct = products.find(product => {\n          return product.id === key;\n        });\n        return of(selectedProduct);\n      }), publishReplay(1), refCount());\n    }\n\n    clearCache() {\n      this.products = null;\n    }\n\n  }\n\n  ProductsCacheService.ɵfac = function ProductsCacheService_Factory(t) {\n    return new (t || ProductsCacheService)();\n  };\n\n  ProductsCacheService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductsCacheService,\n    factory: ProductsCacheService.ɵfac\n  });\n  return ProductsCacheService;\n})();","map":null,"metadata":{},"sourceType":"module"}