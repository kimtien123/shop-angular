{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MessageService } from '../../messages/message.service';\nimport { AuthService } from '../shared/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../messages/message.service\";\nimport * as i4 from \"../../core/page-title/page-title.component\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\n\nfunction RegisterLoginComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" Be sure to enter a valid, existing Email. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterLoginComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" The entered password seems to be wrong.. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function () {\n  return {\n    title: \"Account\",\n    link: \"/account\"\n  };\n};\n\nconst _c1 = function () {\n  return {\n    title: \"Login / Register\"\n  };\n};\n\nconst _c2 = function (a0, a1) {\n  return [a0, a1];\n};\n\nconst _c3 = function (a0) {\n  return {\n    \"has-danger\": a0\n  };\n};\n\nexport let RegisterLoginComponent = /*#__PURE__*/(() => {\n  class RegisterLoginComponent {\n    constructor(authenticationService, router, messageService) {\n      this.authenticationService = authenticationService;\n      this.router = router;\n      this.messageService = messageService;\n    }\n\n    ngOnInit() {\n      this.initLoginForm();\n      this.initRegisterForm();\n    }\n\n    initLoginForm() {\n      this.loginForm = new FormGroup({\n        email: new FormControl(null, [Validators.required, Validators.email]),\n        password: new FormControl(null, Validators.required)\n      });\n    }\n\n    initRegisterForm() {\n      this.registerForm = new FormGroup({\n        email: new FormControl(null, [Validators.required, Validators.email]),\n        password: new FormControl(null, Validators.required),\n        confirmPassword: new FormControl(null, Validators.required)\n      });\n    }\n\n    onRegister() {\n      if (this.registerForm.value.password !== this.registerForm.value.confirmPassword) {\n        this.registerErrors = 'Passwords don\\'t match!';\n        this.registerForm.controls.password.setErrors({\n          password: true\n        });\n        this.registerForm.controls.confirmPassword.setErrors({\n          confirmPassword: true\n        });\n      } else {\n        this.authenticationService.emailSignUp(this.registerForm.value.email, this.registerForm.value.password).then(() => {\n          this.messageService.add('Account created successfully. Please login with your new credentials!');\n          this.loginForm.setValue({\n            email: this.registerForm.value.email,\n            password: ''\n          });\n          this.initRegisterForm();\n        }, error => {\n          this.registerErrors = error.message;\n\n          if (error.code === 'auth/weak-password') {\n            this.registerForm.controls.password.setErrors({\n              password: true\n            });\n            this.registerForm.controls.confirmPassword.setErrors({\n              confirmPassword: true\n            });\n          }\n\n          if (error.code === 'auth/email-already-in-use') {\n            this.registerForm.controls.email.setErrors({\n              email: true\n            });\n          }\n        });\n      }\n    }\n\n    onLogin() {\n      this.authenticationService.emailLogin(this.loginForm.value.email, this.loginForm.value.password).then(() => {\n        this.messageService.add('Login successful!');\n        this.router.navigate(['/home']);\n      }, error => {\n        if (error.code === 'auth/user-not-found') {\n          this.loginForm.controls.email.setErrors({\n            email: true\n          });\n        }\n\n        if (error.code === 'auth/wrong-password') {\n          this.loginForm.controls.password.setErrors({\n            password: true\n          });\n        }\n      });\n    }\n\n  }\n\n  RegisterLoginComponent.ɵfac = function RegisterLoginComponent_Factory(t) {\n    return new (t || RegisterLoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MessageService));\n  };\n\n  RegisterLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterLoginComponent,\n    selectors: [[\"app-register-login\"]],\n    decls: 48,\n    vars: 28,\n    consts: [[\"title\", \"Login / Register Account\", 3, \"children\"], [1, \"container\", \"padding-bottom-3x\", \"mb-2\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"login-box\", 3, \"formGroup\", \"ngSubmit\"], [1, \"margin-bottom-1x\"], [1, \"form-group\", \"input-group\", 3, \"ngClass\"], [\"formControlName\", \"email\", \"type\", \"email\", \"placeholder\", \"Email\", \"required\", \"\", 1, \"form-control\"], [1, \"input-group-addon\"], [1, \"icon-mail\"], [\"class\", \"form-control-feedback\", 4, \"ngIf\"], [\"formControlName\", \"password\", \"type\", \"password\", \"placeholder\", \"Password\", \"required\", \"\", 1, \"form-control\"], [1, \"icon-lock\"], [1, \"text-center\", \"text-sm-right\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"margin-bottom-none\", 3, \"disabled\"], [1, \"padding-top-3x\", \"hidden-md-up\"], [1, \"row\", 3, \"formGroup\", \"ngSubmit\"], [1, \"col-sm-12\"], [1, \"form-group\", 3, \"ngClass\"], [\"for\", \"reg-email\"], [\"formControlName\", \"email\", \"type\", \"email\", \"id\", \"reg-email\", \"required\", \"\", 1, \"form-control\"], [1, \"col-sm-6\"], [\"for\", \"reg-pass\"], [\"formControlName\", \"password\", \"type\", \"password\", \"id\", \"reg-pass\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"reg-pass-confirm\"], [\"formControlName\", \"confirmPassword\", \"type\", \"password\", \"id\", \"reg-pass-confirm\", \"required\", \"\", 1, \"form-control\"], [1, \"col-12\", \"text-center\", \"text-sm-right\"], [1, \"form-group\", \"has-danger\"], [1, \"form-control-feedback\"]],\n    template: function RegisterLoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-page-title\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterLoginComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵelementStart(5, \"h3\", 5);\n        i0.ɵɵtext(6, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵelement(8, \"input\", 7);\n        i0.ɵɵelementStart(9, \"span\", 8);\n        i0.ɵɵelement(10, \"i\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, RegisterLoginComponent_div_11_Template, 2, 0, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 6);\n        i0.ɵɵelement(13, \"input\", 11);\n        i0.ɵɵelementStart(14, \"span\", 8);\n        i0.ɵɵelement(15, \"i\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, RegisterLoginComponent_div_16_Template, 2, 0, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 13)(18, \"button\", 14);\n        i0.ɵɵtext(19, \"Login\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(20, \"div\", 3);\n        i0.ɵɵelement(21, \"div\", 15);\n        i0.ɵɵelementStart(22, \"h3\", 5);\n        i0.ɵɵtext(23, \"No Account? Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"p\");\n        i0.ɵɵtext(25, \"Registration takes less than a minute but gives you full control over your orders.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"form\", 16);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterLoginComponent_Template_form_ngSubmit_26_listener() {\n          return ctx.onRegister();\n        });\n        i0.ɵɵelementStart(27, \"div\", 17)(28, \"div\", 18)(29, \"label\", 19);\n        i0.ɵɵtext(30, \"E-mail Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"div\", 21)(33, \"div\", 18)(34, \"label\", 22);\n        i0.ɵɵtext(35, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"input\", 23);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(37, \"div\", 21)(38, \"div\", 18)(39, \"label\", 24);\n        i0.ɵɵtext(40, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(41, \"input\", 25);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(42, \"div\", 26)(43, \"div\", 27)(44, \"div\", 28);\n        i0.ɵɵtext(45);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(46, \"button\", 14);\n        i0.ɵɵtext(47, \"Register\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"children\", i0.ɵɵpureFunction2(15, _c2, i0.ɵɵpureFunction0(13, _c0), i0.ɵɵpureFunction0(14, _c1)));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(18, _c3, !ctx.loginForm.get(\"email\").valid && ctx.loginForm.get(\"email\").touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loginForm.get(\"email\").valid && ctx.loginForm.get(\"email\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(20, _c3, !ctx.loginForm.get(\"password\").valid && ctx.loginForm.get(\"password\").touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loginForm.get(\"password\").valid && ctx.loginForm.get(\"password\").touched);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(22, _c3, !ctx.registerForm.get(\"email\").valid && ctx.registerForm.get(\"email\").touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(24, _c3, !ctx.registerForm.get(\"password\").valid && ctx.registerForm.get(\"password\").touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(26, _c3, !ctx.registerForm.get(\"confirmPassword\").valid && ctx.registerForm.get(\"confirmPassword\").touched));\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\" \", ctx.registerErrors, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.registerForm.valid);\n      }\n    },\n    directives: [i4.PageTitleComponent, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i6.NgClass, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName, i5.RequiredValidator, i6.NgIf],\n    styles: [\"\"]\n  });\n  return RegisterLoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}